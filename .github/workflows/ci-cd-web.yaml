name: Web CI-CD

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/ci-cd-web.yaml"
      - "web/**"
      - "infrastructure/**"
      - "!infrastructure/lib/api-stack.ts"
      - "!infrastructure/lib/identity-stack.ts"
      - "!infrastructure/test/**"
      - "!**.md"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up node
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14.x
      - name: cache node_modules
        id: cache-node_modules
        uses: actions/cache@v2.1.4
        with:
          path: web/node_modules
          key: ${{ runner.os }}-web-${{ env.cache-name }}-${{ hashFiles('**/web/package-lock.json') }}
      - name: install dependencies
        working-directory: ./web
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: |
          npm install
      - name: run tests
        working-directory: ./web
        run: |
          npm run test:ci

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cache build
        id: cache-build
        uses: actions/cache@v2.1.4
        with:
          path: web/dist
          key: ${{ runner.os }}-web-${{ env.cache-name }}-${{ hashFiles('web/**') }}
      - name: set up node
        if: steps.cache-build.outputs.cache-hit != 'true'
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14.x
      - name: cache node_modules
        if: steps.cache-build.outputs.cache-hit != 'true'
        id: cache-node_modules
        uses: actions/cache@v2.1.4
        with:
          path: web/node_modules
          key: ${{ runner.os }}-web-${{ env.cache-name }}-${{ hashFiles('web/package-lock.json') }}
      - name: install dependencies
        working-directory: ./web
        if: steps.cache-build.outputs.cache-hit != 'true' && steps.cache-node_modules.outputs.cache-hit != 'true'
        run: |
          npm install
      - name: build
        working-directory: ./web
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          npm run build:prod
      - name: upload artifacts for release
        uses: actions/upload-artifact@v2
        with:
          name: web-artifacts
          path: web/dist/editor/

  deploy:
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    steps:
      - uses: actions/checkout@v2
      - name: set up node
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14.x
      - name: cache node modules
        id: cache-node_modules
        uses: actions/cache@v2.1.4
        env:
          cache-name: cache-node-modules
        with:
          path: infrastructure/node_modules
          key: ${{ runner.os }}-infrastructure-${{ env.cache-name }}-${{ hashFiles('infrastructure/package-lock.json') }}
      - name: install dependencies
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        working-directory: ./infrastructure
        run: npm install
      - name: retrieve web assets
        uses: actions/download-artifact@v2
        with:
          name: web-artifacts
          path: infrastructure/resources/web/
      - name: deploy
        working-directory: ./infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          AWS_OPEN_ALCHEMY_CERTIFICATE_ARN: ${{ secrets.AWS_OPEN_ALCHEMY_CERTIFICATE_ARN }}
        run: |
          npm run deploy:web
